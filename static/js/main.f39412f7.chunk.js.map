{"version":3,"sources":["components/teamsChart.jsx","components/championsChart.jsx","components/tittle.jsx","containers/App.jsx","reportWebVitals.js","index.js"],"names":["TeamsChart","teamData","year","className","alt","src","logo","name","alias","ChampionsChart","cupType","useState","data","message","champions","setChampions","isLoaded","setIsLoaded","useEffect","fetch","method","then","response","json","console","log","icon","faTrophy","style","color","map","team","cup","_id","Tittle","faCrown","padding","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUA0BeA,EAvBI,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KAC7B,OACE,mCACE,sBAAKC,UAAW,YAAhB,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKC,IAAI,SAASC,IAAKJ,EAASK,SAElC,sBAAKH,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,+BAAOD,MAET,qBAAKC,UAAU,qBAAf,SACE,+BAAOF,EAASM,SAElB,qBAAKJ,UAAU,sBAAf,SACE,+BAAOF,EAASO,mBCoDbC,EA9DQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGxB,EAAkCC,mBAAS,CAAC,CAAEC,KAAM,GAAKC,QAAQ,MAAjE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAcA,OAZAC,qBAAU,WACRC,MATY,uDASG,CAAEC,OAAQ,QACtBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GACJG,EAAaH,GACbK,GAAY,GACZO,QAAQC,IAAIb,QAGf,IAID,mCACE,sBAAKT,UAAU,QAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,uCACA,sCACA,qCACA,0CAEF,sBAAKA,UAAU,4BAAf,UAEgB,SAAZO,GAAsB,wCAAU,cAAC,IAAD,CAAiBgB,KAAMC,IAAUC,MAAO,CAACC,MAAO,aAGpE,WAAZnB,GAAwB,0CAAY,cAAC,IAAD,CAAiBgB,KAAMC,IAAUC,MAAO,CAACC,MAAO,qBAI1F,qBAAK1B,UAAU,QAAf,UAEGa,GAAY,gDAIbA,GACA,qBAAKb,UAAU,QAAf,SAGEW,EAAUF,KAAKkB,KAAI,SAACC,GAClB,GAAIA,EAAKC,MAAQtB,EAAS,OAAO,cAAC,EAAD,CAA2BT,SAAY8B,EAAK9B,SAAS,GAAIC,KAAM6B,EAAK7B,MAAnD6B,EAAKE,gBCpCtDC,G,MAfA,WACb,OACE,mCACE,sBAAK/B,UAAU,OAAf,UACE,kDACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAiBuB,KAAMS,IAAUP,MAAO,CAACC,MAAO,OAAQO,QAAQ,SAChE,uDACA,cAAC,IAAD,CAAiBV,KAAMS,IAASP,MAAO,CAACC,MAAO,SAAUO,QAAQ,mBCc5DC,EArBH,WAEV,OACE,mCACE,0BAASlC,UAAU,OAAnB,UACE,yBAASA,UAAU,SAAnB,SACE,cAAC,EAAD,MAEF,0BAASA,UAAU,SAAnB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAgBO,QAAS,WAE3B,qBAAKP,UAAU,iBAAf,SACE,cAAC,EAAD,CAAgBO,QAAS,sBCPtB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f39412f7.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/teamsChart.css';\n\nconst TeamsChart = ({teamData, year}) => {\n  return(\n    <>\n      <div className= \"teamChart\">\n        <div className=\"teamPhoto\">\n          <img alt=\"escudo\" src={teamData.logo} />\n        </div>\n        <div className=\"teamInfo\">\n          <div className=\"teamInfo--year\">\n            <span>{year}</span>\n          </div>\n          <div className=\"teamInfo--teamName\">\n            <span>{teamData.name}</span>\n          </div>\n          <div className=\"teamInfo--teamAlias\">\n            <span>{teamData.alias}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default TeamsChart;","import React, { useEffect, useState } from 'react';\nimport '../styles/championsChart.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons'\nimport TeamsChart from './teamsChart';\n\nconst API_URL = 'https://interfacultades-api.vercel.app/api/champions';\n\nconst ChampionsChart = ({ cupType }) => {\n  \n\n  const [champions, setChampions] = useState([{ data: [] , message:[]}]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetch(API_URL, { method: 'GET' })\n      .then(response => response.json())\n      .then(data => {\n        setChampions(data);\n        setIsLoaded(true);\n        console.log(data);\n\n      })\n  }, []); // the second parameter says when is the useState executed. (when [] is mounted, unmounted or updated)\n\n\n  return (\n    <>\n      <div className=\"chart\">\n        <div className=\"chart__tittle\">\n          <div className=\"chart__tittle--champions\">\n            <span>CAM</span>\n            <span>PE</span>\n            <span>O</span>\n            <span>NES</span>\n          </div>\n          <div className=\"chart_tittle--description\">\n            { \n              cupType === 'gold' && <span>Oro <FontAwesomeIcon icon={faTrophy} style={{color: \"gold\"}}/></span>\n            }\n            { \n              cupType === 'silver' && <span>Plata <FontAwesomeIcon icon={faTrophy} style={{color: \"silver\"}}/></span>\n            }\n          </div>\n        </div>\n        <div className=\"teams\">\n          {\n          !isLoaded && <span>loading...</span>\n          }  \n        </div>\n        {\n          isLoaded && \n          <div className=\"teams\">\n          {\n            // eslint-disable-next-line array-callback-return\n            champions.data.map((team) => {\n              if (team.cup === cupType) return <TeamsChart key={team._id} teamData = {team.teamData[0]} year={team.year} />\n            } \n            )\n          }\n          </div> \n        }\n        \n\n      </div>\n\n    </>\n  )\n};\n\nexport default ChampionsChart;","import React from 'react';\nimport '../styles/tittle.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst Tittle = () => {\n  return(\n    <>\n      <div className=\"body\">\n        <h1>INTERFACTULTADES</h1>\n        <div className=\"wallOfChampions\">\n          <FontAwesomeIcon icon={faCrown}  style={{color: \"gold\", padding:\"10%\"}}/>\n          <span> WALL OF CHAMPIONS </span>\n          <FontAwesomeIcon icon={faCrown} style={{color: \"silver\", padding:\"10%\"}}/>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Tittle;","import React from 'react';\nimport '../styles/App.css';\nimport ChampionsChart from '../components/championsChart';\nimport Tittle from '../components/tittle';\n\n\nconst App = () => {\n\n  return (\n    <>\n      <section className=\"body\">\n        <section className=\"header\">\n          <Tittle />\n        </section>\n        <section className=\"charts\">\n          <div className=\"charts__gold\">\n            <ChampionsChart cupType={'gold'}  />\n          </div>\n          <div className=\"charts__silver\">\n            <ChampionsChart cupType={'silver'}  />\n          </div>\n        </section>\n      </section>\n    </>\n  )\n};\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}